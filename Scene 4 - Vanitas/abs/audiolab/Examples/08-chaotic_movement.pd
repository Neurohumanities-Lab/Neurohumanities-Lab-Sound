#N struct 1062-template float x float y float c float s float th float
stretch array 1062-plus 1062-template-y array 1062-minus 1062-template-y
;
#N struct 1062-template-y float y;
#N struct 1063-template float x float y float c float s float th float
stretch array 1063-plus 1063-template-y array 1063-minus 1063-template-y
;
#N struct 1063-template-y float y;
#N canvas 136 55 1225 712 10;
#X declare -path ./audio;
#X declare -path ..;
#X obj 403 67 pp.sfplayer~;
#A saved;
#X obj 777 425 r \$0-room;
#X obj 653 329 *~;
#X obj 453 307 *~;
#X msg 746 116 frequency \$1;
#X obj 746 75 r \$0-speed;
#X floatatom 746 96 5 0 0 0 - - -;
#X floatatom 681 331 5 0 0 0 - - -;
#X floatatom 481 307 5 0 0 0 - - -;
#N canvas 3 52 450 300 init 0;
#X obj 117 109 outlet;
#X obj 117 63 loadbang;
#X msg 117 88 loadIR IR-Staircase.wav;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X restore 881 546 pd init;
#X obj 550 656 pp.out~;
#A saved;
#N canvas 3 50 450 300 init 0;
#X obj 117 109 outlet;
#X obj 117 63 loadbang;
#X msg 117 88 smooth 100;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X restore 557 229 pd init;
#N canvas 3 54 450 300 init 0;
#X obj 117 109 outlet;
#X obj 117 63 loadbang;
#X msg 117 88 smooth 100;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X restore 757 226 pd init;
#X obj 576 4 r \$0-sample;
#X obj 576 24 symbol;
#X msg 576 45 open \$1 \, loop 1 \, play 1;
#X obj 713 657 r \$0-volume;
#X msg 713 678 volume \$1;
#X obj 4 0 cnv 15 380 700 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 19 228 hsl 200 15 0 30 0 0 \$0-depth \$0-depthr Movement_depth
-2 -8 2 12 -262144 -1 -1 9267 1;
#X obj 19 295 hsl 200 15 0 1 0 0 \$0-room \$0-roomr Room-Presence -2
-8 2 12 -262144 -1 -1 19900 1;
#X obj 19 194 hsl 200 15 0.1 10 1 0 \$0-speed \$0-speedr Movement-speed
-2 -8 2 12 -262144 -1 -1 2400 1;
#X obj 16 316 tgl 15 0 \$0-bypass \$0-bypassr Bypass 17 7 2 12 -262144
-1 -1 0 1;
#X msg 18 384 Trumpet.wav;
#X msg 18 362 Tambourine-shake.wav;
#X obj 18 406 s \$0-sample;
#N canvas 715 199 450 300 init 0;
#X obj 177 48 loadbang;
#X msg 89 81 \; pd dsp 1;
#X obj 177 109 f \$0;
#X obj 190 74 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 177 130 \; \$1-roomr 1 \; \$1-depthr 20 \; \$1-widthr 20 \;
\$1-speedr 0.4 \;;
#X connect 0 0 1 0;
#X connect 0 0 2 0;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X restore 11 8 pd init;
#X obj 19 160 hsl 200 15 1 100 0 0 \$0-volume \$0-volumer Volume -2
-8 2 12 -260097 -1 -1 19300 1;
#X obj 248 25 declare -path ./audio;
#X obj 925 654 pp.out~;
#A saved;
#X obj 428 110 s~ \$0-bp;
#X obj 924 605 r~ \$0-bp;
#X obj 924 630 *~;
#X obj 425 163 r \$0-bypass;
#X obj 404 206 *~ 1;
#X obj 1086 654 r \$0-volume;
#X msg 1086 675 volume \$1;
#X obj 952 629 r \$0-bypass;
#N canvas 3 54 450 300 init 0;
#X obj 117 109 outlet;
#X obj 117 63 loadbang;
#X msg 117 88 open Tambourine-shake.wav \, loop 1 \, play 1;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X restore 586 68 pd init;
#X obj 425 184 == 0;
#X text 11 60 Emulation of a sound source that moves on an arbitrary
path in a room in front of the listener.;
#X text 16 342 load a sound source;
#X obj 22 531 s \$0-IR;
#X obj 878 522 r \$0-IR;
#X obj 278 5 declare -path ..;
#X text 15 439 load a reverb impulse response;
#X obj 698 541 pp.fft-partconv-st~;
#A saved;
#X obj 404 548 pp.fft-block-st~;
#A saved;
#X obj 22 464 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 22 484 openpanel;
#X msg 22 507 loadIR \$1;
#X obj 19 261 hsl 200 15 0 30 0 0 \$0-width \$0-widthr Movement-width
-2 -8 2 12 -262144 -1 -1 16500 1;
#X obj 481 287 r \$0-width;
#X obj 681 310 r \$0-depth;
#X text 423 531 latency compensation for fft-partconv~;
#X obj 653 226 pp.lfnoise~ 0 1;
#A saved empty_slot \; empty_slot \; empty_slot \; empty_slot \; empty_slot
\; empty_slot \; empty_slot \; empty_slot \; empty_slot \; empty_slot
\; empty_slot \; empty_slot \; empty_slot \; empty_slot \; empty_slot
\; empty_slot \; empty_slot \; empty_slot \; empty_slot \; empty_slot
\; empty_slot \;;
#X obj 453 229 pp.lfnoise~;
#A saved empty_slot \; empty_slot \; empty_slot \; empty_slot \; empty_slot
\; empty_slot \; empty_slot \; empty_slot \; empty_slot \; empty_slot
\; empty_slot \; empty_slot \; empty_slot \; empty_slot \; empty_slot
\; empty_slot \; empty_slot \; empty_slot \; empty_slot \; empty_slot
\; empty_slot \;;
#X text 16 679 Philipp Schmalfu√ü \, 2018/19;
#X obj 405 387 pp.spacer~;
#A saved empty_slot \; empty_slot \; empty_slot \; empty_slot \; empty_slot
\; empty_slot \; empty_slot \; empty_slot \; empty_slot \; empty_slot
\; empty_slot \; empty_slot \; empty_slot \; empty_slot \; empty_slot
\; empty_slot \; empty_slot \; empty_slot \; empty_slot \; empty_slot
\; empty_slot \;;
#X obj 654 264 pow~ 4;
#X text 697 259 Random unipolar signal generator \, raised to the 4th
power. This gives a preference for movements in front of the listener.
;
#N canvas 3 54 450 300 init 0;
#X obj 117 109 outlet;
#X obj 117 63 loadbang;
#X msg 117 88 localize 75;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X restore 563 387 pd init;
#X obj 652 354 +~ 0.15;
#X obj 756 493 *~ 1;
#X obj 699 493 *~ 1;
#X floatatom 777 448 5 0 1 0 - - -;
#X connect 0 0 30 0;
#X connect 0 0 34 0;
#X connect 1 0 65 0;
#X connect 2 0 62 0;
#X connect 3 0 58 1;
#X connect 4 0 55 1;
#X connect 4 0 56 1;
#X connect 5 0 6 0;
#X connect 6 0 4 0;
#X connect 7 0 2 1;
#X connect 8 0 3 1;
#X connect 9 0 46 3;
#X connect 11 0 56 1;
#X connect 12 0 55 1;
#X connect 13 0 14 0;
#X connect 14 0 15 0;
#X connect 15 0 0 3;
#X connect 16 0 17 0;
#X connect 17 0 10 2;
#X connect 23 0 25 0;
#X connect 24 0 25 0;
#X connect 31 0 32 0;
#X connect 32 0 29 0;
#X connect 32 0 29 1;
#X connect 33 0 39 0;
#X connect 34 0 58 0;
#X connect 35 0 36 0;
#X connect 36 0 29 2;
#X connect 37 0 32 1;
#X connect 38 0 0 3;
#X connect 39 0 34 1;
#X connect 43 0 46 3;
#X connect 46 0 10 0;
#X connect 46 1 10 1;
#X connect 47 0 10 0;
#X connect 47 1 10 1;
#X connect 48 0 49 0;
#X connect 49 0 50 0;
#X connect 50 0 42 0;
#X connect 52 0 8 0;
#X connect 53 0 7 0;
#X connect 55 0 59 0;
#X connect 56 0 3 0;
#X connect 58 0 47 0;
#X connect 58 1 47 1;
#X connect 58 2 64 0;
#X connect 58 3 63 0;
#X connect 59 0 2 0;
#X connect 61 0 58 3;
#X connect 62 0 58 2;
#X connect 63 0 46 1;
#X connect 64 0 46 0;
#X connect 65 0 63 1;
#X connect 65 0 64 1;
